'use client';

import { useState } from 'react';
import Image from 'next/image';

import { motion, AnimatePresence } from 'framer-motion';
import сhevronDown from '@/assets/icons/chevron-down.svg';

import styles from './Accordion.module.css';

function AccordionItem({ title, content, isOpen, onToggle }) {
  return (
    <motion.div initial={false} className={styles.accordionItem}>
      <motion.button
        className={styles.accordionButton}
        onClick={onToggle}
        aria-expanded={isOpen}
        initial={false}
      >
        <h2 className={styles.accordionTitle}>{title}</h2>
        <motion.div
          initial={false}
          animate={{ rotate: isOpen ? 180 : 0 }}
          transition={{ duration: 0.3 }}
        >
          <Image src={сhevronDown} alt="arrow down" width={20} height={20} />
        </motion.div>
      </motion.button>

      <AnimatePresence initial={false}>
        {isOpen && (
          <motion.div
            key="content"
            initial="collapsed"
            animate="open"
            exit="collapsed"
            variants={{
              open: { opacity: 1, height: 'auto' },
              collapsed: { opacity: 0, height: 0 },
            }}
            transition={{ duration: 0.3, ease: [0.04, 0.62, 0.23, 0.98] }}
            className={styles.accordionContent}
          >
            <p className={styles.accordionText}>{content}</p>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}

const items = [
  {
    title: 'What is liquid staking?',
    content:
      'Liquid staking is a way to stake your cryptocurrency while still keeping it liquid and usable. Harbor allows users to stake $AMB tokens while retaining liquidity through liquid staking derivatives (stAMB). Harbor makes it easy for users to stake their tokens and earn rewards, while still being able to use their staked tokens to trade.',
  },
  {
    title: 'What is stAMB, and why do I need it?',
    content: (
      <>
        <b>stAMB</b> is a <b>liquid staking derivative</b> of the <b>$AMB</b>{' '}
        token on the Harbor platform. When users stake their <b>$AMB</b> tokens
        through Harbor, they receive <b>stAMB</b> in return. This token
        represents their staked $AMB and allows them to continue participating
        in DeFi activities like trading, while still earning staking rewards.
        Essentially, <b>stAMB</b> provides liquidity to staked assets, meaning
        users don’t have to wait for the standard unstaking period to use their
        tokens. They can freely use <b>stAMB</b> while their original{' '}
        <b>$AMB</b> remains staked and continues generating rewards.
      </>
    ),
  },
  {
    title: 'How are staking rewards calculated and distributed?',
    content:
      "Staking rewards are automatically generated by the platform based on the user's proportional share in the chosen validator pool. Both $AMB and $BOND rewards are continuously accumulated the longer the user leaves their $AMB staked. Users can claim their accumulated rewards at any time.",
  },
  {
    title: 'Can I withdraw (unstake) my tokens at any time?',
    content:
      'Users initiate the unstaking request and Harbor will automatically convert the stAMB back to its underlying components - $AMB. As with other liquid staking platforms, there is a predetermined unstaking period of 14 days before users receive their unlocked $AMB tokens.',
  },
  {
    title: 'Is there a minimum or maximum amount required for staking?',
    content:
      'Yes, the minimum amount for $AMB staking is $AMB 1000.0. Regarding the HBR staking, you can stake any amount.',
  },
];

export default function Accordion() {
  const [openIndex, setOpenIndex] = useState(undefined);

  return (
    <div className={styles.accordion}>
      {items.map((item, index) => (
        <AccordionItem
          key={index}
          title={item.title}
          content={item.content}
          isOpen={openIndex === index}
          onToggle={() => setOpenIndex(openIndex === index ? null : index)}
          index={index}
        />
      ))}
    </div>
  );
}
